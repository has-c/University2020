knitr::opts_chunk$set(echo = TRUE)
library(s20x)
#read in data
heartHealth.df = read.csv("hearthealth.csv")
#make a copy for this question
heartHealth.cleaned.df = heartHealth.df[c("height", "weight", "sbp", "dbp")]
#initial pairs plot
pairs20x(heartHealth.cleaned.df, main="Initial Pairs Plot")
#adjustment 1
heartHealth.cleaned.df[heartHealth.cleaned.df["height"] == 15.1, "height"] = NA
pairs20x(heartHealth.cleaned.df, main="Problem 1 Adjustment")
#adjustment 2 - add NA
heartHealth.cleaned.df[106,"weight"] = NA
pairs20x(heartHealth.cleaned.df, main="Problem 2 Adjustment")
#remove any NA's
eggs.df = heartHealth.df[,c("ethnicity", "eggs")]
eggs.df = eggs.df[complete.cases(eggs.df[, "eggs"]),]
#box plot
plot(eggs.df$ethnicity, eggs.df$eggs, main="Ethnicity versus typical number of eggs consumed per week",
xlab="Ethnicity", ylab="Number of eggs consumeed per week")
#pairs plot
pairs20x(eggs.df[c("ethnicity", "eggs")])
#fit model
eggs.fit = glm(eggs ~ ethnicity, data=eggs.df, family="poisson")
#anova
anova(eggs.fit, test = "Chisq")
#summary
summary(eggs.fit)
#confidence intervals - european baseline
100*(exp(confint(eggs.fit)) -1)
#subset and remove any NA's
drinking.df = heartHealth.df[, c("drinkmaxday", "age", "sex")]
pairs20x(drinking.df, main="Pairs plot of age, sex and maximum number of \n alcoholic drinks consumed per day")
#fit model
drinks.fit = glm(drinkmaxday ~ age*sex, data=drinking.df, family="poisson")
summary(drinks.fit)
#fit model - remove interaction
drinks.fit = glm(drinkmaxday ~ age+sex, data=drinking.df, family="poisson")
#model summary
summary(drinks.fit)
#confidence intervals
100*(exp(confint(drinks.fit))-1)
#plot part d
ages <- data.frame(age=seq(0,100), sex="M")
malePredictedValues <- predict(drinks.fit, newdata = ages)
malePredictedValues <- exp(malePredictedValues)
ages <- data.frame(age=seq(0,100), sex="F")
femalePredictedValues <- predict(drinks.fit, newdata = ages)
femalePredictedValues <- exp(femalePredictedValues)
plot(drinkmaxday ~ age, data = heartHealth.df,col = ifelse(heartHealth.df$sex == "M" , "blue", "red"), xlim=c(0, 100),
main="Age versus Maximum number of alcoholic drinks \n consumed per day subset by gender", xlab="Age", ylab="Maximum number of alcoholic drinks \n consumed per day")
lines(ages$age, femalePredictedValues, col="red")
lines(ages$age, malePredictedValues, col="blue")
legend("topright", legend=c("Female", "Male"),
col=c("red", "blue"), lty=1)
#e
test1.df = data.frame(age=c(30,50), sex=c("M", "M"))
test1.predict = predict(drinks.fit, newdata = test1.df, type = "response")
test2.df = data.frame(age=c(40,40), sex=c("M", "F"))
test2.predict = predict(drinks.fit, newdata = test2.df, type = "response")
print(test1.predict)
print(test2.predict)
exercise.df = heartHealth.df[c("exermin", "exerhour", "exerday", "smoke", "age")]
#create exerHours field
exerMinsInHours = exercise.df$exermin/60
exerHoursPerDay =  exercise.df$exerhour + exerMinsInHours
exerHoursPerWeek = exercise.df$exerday * exerHoursPerDay
exercise.df$exerHoursPerWeek = exerHoursPerWeek
#fit model
exer.fit = glm(exerHoursPerWeek ~ age*smoke, data=exercise.df, family="gaussian")
summary(exer.fit)
#fit model - remove interaction
exer.fit = glm(exerHoursPerWeek ~ age+smoke, data=exercise.df, family="gaussian")
summary(exer.fit)
confint(exer.fit)
#plot d
pred.df <- data.frame(age=seq(0,100), smoke="Yes")
smokersPredictions <- predict(exer.fit, newdata = pred.df)
pred.df <- data.frame(age=seq(0,100), smoke="No")
nonsmokersPredictions <- predict(exer.fit, newdata = pred.df)
plot(exerHoursPerWeek ~ age, data = exercise.df, col = ifelse(exercise.df$smoke == "Yes" , "blue", "red"),xlim=c(0, 100),
main="Age versus number of hours exercised per week \n subset by smoking history", xlab="Age",
ylab = "Number of hours exercised per week")
lines(pred.df$age, nonsmokersPredictions, col="red")
lines(pred.df$age, smokersPredictions, col="blue")
legend("topright", legend=c("Non-Smokers", "Smokers"),
col=c("red", "blue"), lty=1)
heartattack.df = heartHealth.df[c("heartattack", "chol", "age")]
#fit model
heartattack.fit = glm(heartattack ~ age*chol, data=heartattack.df, family="binomial")
summary(heartattack.fit)
#fit model - remove interaction
heartattack.fit = glm(heartattack ~ age+chol, data=heartattack.df, family="binomial")
summary(heartattack.fit)
100*(exp(confint(heartattack.fit))-1)
#plot d
pred.df <- data.frame(age=seq(0,100), chol="High")
highCholPredictions <- predict(heartattack.fit, newdata = pred.df)
highCholPredictionsOdds = exp(highCholPredictions)
highCholPredictionsProb = highCholPredictionsOdds / (1 + highCholPredictionsOdds)
pred.df <- data.frame(age=seq(0,100), chol="Low")
lowCholPredictions <- predict(heartattack.fit, newdata = pred.df)
lowCholPredictionsOdds = exp(lowCholPredictions)
lowCholPredictionsProb = lowCholPredictionsOdds / (1 + lowCholPredictionsOdds)
plot(heartattack ~ age, data = heartattack.df, col = ifelse(heartattack.df$chol == "High" , "blue", "red"),xlim=c(0,100), ylim=c(0,1),
main="Age vs Probability of having a heart-attack subset by \n Cholestrol level", xlab="Age", ylab="Probability of having a heart attack")
lines(pred.df$age, lowCholPredictionsProb, col="red")
lines(pred.df$age, highCholPredictionsProb, col="blue")
legend("topleft", legend=c("Low Cholestrol", "High Cholestrol"),
col=c("red", "blue"), lty=1)
